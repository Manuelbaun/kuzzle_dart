---
env:
  global:
    - AWS_ACCESS_KEY_ID=AKIAIYAXFUAHXOWP2MJA
    # AWS_SECRET_ACCESS_KEY
    - secure: "A8bt3NmCComxsPRg3J1wiPZg4n3GgAWl45NIGQjllE2jd0CiOwznTNrvCjnABC6lJ6rLSsPC+CSbTIiYm2XwDIZYcuynKUtJbBYEgSIbkPE7FpvcG3/yd4QaWPxngTTc3LjcLzNqyo3eQ0sjF+s8KZdpo32sf06rHplm6puJ1gB78GXvfhh7kvVEAvAZP+vKBRy45Oe09174Tvh//okuUoGDe7Ehqzd0EhN3XgSfJ/sQCjjByQiwQ12m4FLvlurDUBhlcyok0YxXqpJsuhPV5U2tc+Hsts1UKqphIlEPNui5sgblytXK5DqSpD5tesbfdxvC63cLyTsptxVtuZ3+/gy8EeuRZ5065af1niG404adzcp5g3jXhANOfr9GMFJf0C0oZ+qrR/CClQP8HjdADYQgH6QRIZhfnVriuZBHsH3KWB9h+arcW2MC0L8Su1+8zfw8INkxqkVRILR167nRMjW0B+QpvABhqhCILSzcagi78sdmclhkUdrVW7g7lWo3JxpmiqCkB4Ybzs4vkZsIw+zX/jf5O2URVWRdjGZKUux1JeuaVC0Qscvlo9WwgVY7s0zReAfuaXA0kfU6qEn+f/kaI/O4KWQEpw8bmAcT7z8F/IhcT13twsuRhFA0C9rgaGaJzaEcRSDezVg++3oCyVvXNwufOiCFrCiH9yi88mU=" 
  # ------------------------
  # Jobs configuration
  # ------------------------
jobs:
  include:
    - stage: Tests
      name: Dead link check
      if:
        type = pull_request OR type = push AND branch =~ /^master|[0-9]+-(dev|stable)$/
        OR type = cron
      language: node_js
      node_js: 12
      before_script:
        - npm ci
        - npm run doc-prepare
        - $(npm bin)/kuzdoc iterate-repos:install --repos_path doc/framework/.repos/
        - $(npm bin)/kuzdoc framework:link -d /sdk/dart/2/ -v 2

      script:
        - gem install typhoeus
        - cd doc/framework/ && HYDRA_MAX_CONCURRENCY=20 ruby .ci/dead-links.rb -p src/sdk/java/3/


    - stage: Tests
      name: Documentation Snippets
      if: type = pull_request OR type = push AND branch =~ /^master|[0-9]+-dev$/ OR type = cron
      language: node_js
      node_js: 12
      script: docker-compose -f .ci/doc/docker-compose.yml run doc-tests index


    - stage: Tests
      name: Unit tests Dart SDK
      language: dart
      sudo: false
      dart:
        - stable
      dart_task:
      - test: --platform vm
      - dartanalyzer: --fatal-warnings lib
      services:
        - docker
      before_script:
        - if [ $TRAVIS_DART_TEST == true ]; then ./docker_launch.sh; fi
      cache:
        directories:
          - $HOME/.pub-cache
      after_success:
        - if [ "$TRAVIS_DART_VERSION" == "stable" ] && [ $TRAVIS_DART_TEST == true ]; then ./coverage.sh; fi
        - if [ "$TRAVIS_DART_VERSION" == "stable" ] && [ $TRAVIS_DART_TEST == true ] && [ $TRAVIS_BRANCH == 'master' ]; then dartdoc; fi      


    - stage: Deployments
      name: Deploy documentation to next-docs.kuzzle.io
      if: type = push AND branch =~ /^[0-9]+-dev$/
      language: node_js
      node_js: 12
      env:
        - BRANCH=dev
        - NODE_ENV=production
        - S3_BUCKET=docs-next.kuzzle.io
        - CLOUDFRONT_DISTRIBUTION_ID=E2ZCCEK9GRB49U
        - AWS_DEFAULT_REGION=us-west-2

      addons:
        apt:
          update: true
          packages:
            - python
            - python-pip

      install:
        - pip install awscli --upgrade --user
        - npm ci

      script:
        - npm run doc-prepare
        - npm run doc-build

      deploy:
        provider: script
        script:
          - npm run doc-upload
        skip_cleanup: true
        on:
          all_branches: true

      after_deploy:
        - npm run doc-cloudfront


    - stage: Deployments
      name: Deploy documentation to docs.kuzzle.io
      if: type = push AND branch =~ /^master|[0-9]+-stable$/
      language: node_js
      node_js: 12
      env:
        - NODE_ENV=production
        - S3_BUCKET=docs.kuzzle.io
        - CLOUDFRONT_DISTRIBUTION_ID=E3D6RP0POLCJMM
        - AWS_DEFAULT_REGION=us-west-2
      addons:
        apt:
          packages:
            - python
            - python-pip
      install:
        - pip install awscli --upgrade --user
        - npm ci
      script:
        - npm run doc-prepare
        - npm run doc-build
      deploy:
        provider: script
        script:
          - npm run doc-upload
        skip_cleanup: true
        on:
          all_branches: true
      after_deploy:
        - npm run doc-cloudfront

stages:
  - name: Tests
    if: type =~ /(push)/ AND branch =~ /^master|[0-9]+-(dev|stable)$/
  - name: Builds
    if: type =~ /(push)/ AND branch =~ /^master|[0-9]+-(dev|stable)$/
  - name: Deployments
    if: type =~ /(push)/ AND branch =~ /^master|[0-9]+-(dev|stable)$/

notifications:
  slack:
    rooms:
      - secure: ACjz4TJEYBEzmwVOYrCNnr4+jC0FaX+qh150QacYGIgaQYL+U3xLEQmWNlZ3oxaPPMDAk42m+diHolqNwh6qsOWaPSWRlGfLKhHLSzRI98bhF7HQ+3eLMYmx7y7SKwRzyRjus0jgxp0Kc2mq0nhKqv+7rarQtIgWlC1PLrzZ35CUbUlqYSoeYAlXoyDB1eZgYsvjt+eC5yCvGePsfKbupWC2/hIVl+qZ+9AhVmOfiMv7daFW29Vu300aoY+0IqwX7jHGcmHn/7QCRsx0IBy/SL24TzfSV9SUSnbjK4fTrcrhjYDEZdH1lpvDtvr50GgkrTjy1wPVz8XIyCZ7LZolylkx+nR1MWyvum20QRFub2Qhz/+rS+OFiQZ8H01BPuklLUTSQhBksfpGBck3d2yNLiTqGEVWYTnZ9mkCnMQ3BzJXEF04KLHG7wYn2rk6wjPghVmFQH5GMsxM5v33CFgcNzp6lRJOX9CmjZosck6o9SA0WlazHH/CLWWKk1wrQ1ygDayW5m+N/o58UIxgW2LIUlp4tV1z/bRtO2yTd020yWchlKPVmf1A5OMfigJNMRsQGNZNadS7qA2M394OJw3/Hg+0EVF8gai/V8FRijmkxmhYyCIYMcjaGwx8JxfoMrRKcM76haBAhg0JQxsSVKzyXfONGzd5DXjcxSGZ2wuEdu0=
    on_success: never
    on_failure: always
  

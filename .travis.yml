---
  env:
    global:
      - AWS_ACCESS_KEY_ID=AKIAIYAXFUAHXOWP2MJA
      # AWS_SECRET_ACCESS_KEY
      - secure: "frBqVCklArDnCDxVotejW0YM+K8hWTBWc2esto0NtbT0L5SlLjp3+zc9mvUpDEEejXdYEtJqOXlB7ZQnfAo0Xt09c6ZLMBeWIXtpzqW4zdhprzJtnSQkxXlskyYURtW0cYPnWIfcNouI0966z3B7rgBM6ZyHS4XiQi0euLDq6t8UVpJDbRsRPu3WRDQTwV6kPwQkiLJLz8J2XCOFqC7n885pOA4MFUJ2rdLMqX61xhPi0EfGXQCoJ79jpnCUoLI93bNeAnxhiaBcrznDpOBxUhN4TViFCDriMsbAVX23sE8AZoxdhOQsgAksVfX4s3n183haqCb1R8FjUWdYYD766mYZ/E6lkXiVeJVGLMoQmdKqlPav9EESmWL2vW+1yyBoiqMuxdXaqG+/PjOJZAz6rLgsGfISrsnofYD8+juAuKZE9H3NmTbrUxr8CswnK6Lsng3dY3tOgQP6+EyWKJMVurxIiv1Bdi/i6EHeH0TwIz4WsjhRUbc8pwKXaNeztlO5p8v16WllC2s1HzexJT1M3RBrn9+Wauo3UdsueUJJnIQXiWnvNdoCgu66bQ7TLZSuo8y/LPrYczEYgnBdWt73uPvk2DnVftzZcbZmQJGNDLxH9+JchtRLgzcJF4+UNN9hnpeDG1DGdw/F3XjwDryeG7qsy9uPjBhy3AlwTZFADu8="
  # ------------------------
  # Jobs configuration
  # ------------------------
  jobs:
    include:
      - stage: Tests
        name: Dead link check
        if:
          type = pull_request OR type = push AND branch =~ /^master|[0-9]+-(dev|stable)$/
          OR type = cron
        language: node_js
        node_js: 12
        before_script:
          - npm ci
          - npm run doc-prepare
          - $(npm bin)/kuzdoc iterate-repos:install --repos_path doc/framework/.repos/
          - $(npm bin)/kuzdoc framework:link -d /sdk/dart/2/ -v 2
  
        script:
          - gem install typhoeus
          - cd doc/framework/ && HYDRA_MAX_CONCURRENCY=20 ruby .ci/dead-links.rb -p src/sdk/java/3/
  
  
      - stage: Tests
        name: Documentation Snippets
        if: type = pull_request OR type = push AND branch =~ /^master|[0-9]+-dev$/ OR type = cron
        language: node_js
        node_js: 12
        script: docker-compose -f .ci/doc/docker-compose.yml run doc-tests index
  
  
      - stage: Tests
        name: Unit tests Dart SDK
        language: dart
        sudo: false
        dart:
          - stable
        dart_task:
        - test: --platform vm
        - dartanalyzer: --fatal-warnings lib
        services:
          - docker
        before_script:
          - if [ $TRAVIS_DART_TEST == true ]; then ./docker_launch.sh; fi
        cache:
          directories:
            - $HOME/.pub-cache
        after_success:
          - if [ "$TRAVIS_DART_VERSION" == "stable" ] && [ $TRAVIS_DART_TEST == true ]; then ./coverage.sh; fi
          - if [ "$TRAVIS_DART_VERSION" == "stable" ] && [ $TRAVIS_DART_TEST == true ] && [ $TRAVIS_BRANCH == 'master' ]; then dartdoc; fi      
  
  
      - stage: Deployments
        name: Deploy documentation to next-docs.kuzzle.io
        if: type = push AND branch =~ /^[0-9]+-dev$/
        language: node_js
        node_js: 12
        env:
          - BRANCH=dev
          - NODE_ENV=production
          - S3_BUCKET=docs-next.kuzzle.io
          - CLOUDFRONT_DISTRIBUTION_ID=E2ZCCEK9GRB49U
          - AWS_DEFAULT_REGION=us-west-2
  
        addons:
          apt:
            update: true
            packages:
              - python
              - python-pip
  
        install:
          - pip install awscli --upgrade --user
          - npm ci
  
        script:
          - npm run doc-prepare
          - npm run doc-build
  
        deploy:
          provider: script
          script:
            - npm run doc-upload
          skip_cleanup: true
          on:
            all_branches: true
  
        after_deploy:
          - npm run doc-cloudfront
  
  
      - stage: Deployments
        name: Deploy documentation to docs.kuzzle.io
        if: type = push AND branch =~ /^master|[0-9]+-stable$/
        language: node_js
        node_js: 12
        env:
          - NODE_ENV=production
          - S3_BUCKET=docs.kuzzle.io
          - CLOUDFRONT_DISTRIBUTION_ID=E3D6RP0POLCJMM
          - AWS_DEFAULT_REGION=us-west-2
        addons:
          apt:
            packages:
              - python
              - python-pip
        install:
          - pip install awscli --upgrade --user
          - npm ci
        script:
          - npm run doc-prepare
          - npm run doc-build
        deploy:
          provider: script
          script:
            - npm run doc-upload
          skip_cleanup: true
          on:
            all_branches: true
        after_deploy:
          - npm run doc-cloudfront
  
  stages:
    - name: Tests
      if: type =~ /(push)/ AND branch =~ /^master|[0-9]+-(dev|stable)$/
    - name: Builds
      if: type =~ /(push)/ AND branch =~ /^master|[0-9]+-(dev|stable)$/
    - name: Deployments
      if: type =~ /(push)/ AND branch =~ /^master|[0-9]+-(dev|stable)$/
  
  notifications:
    slack:
      rooms:
        - secure: ACjz4TJEYBEzmwVOYrCNnr4+jC0FaX+qh150QacYGIgaQYL+U3xLEQmWNlZ3oxaPPMDAk42m+diHolqNwh6qsOWaPSWRlGfLKhHLSzRI98bhF7HQ+3eLMYmx7y7SKwRzyRjus0jgxp0Kc2mq0nhKqv+7rarQtIgWlC1PLrzZ35CUbUlqYSoeYAlXoyDB1eZgYsvjt+eC5yCvGePsfKbupWC2/hIVl+qZ+9AhVmOfiMv7daFW29Vu300aoY+0IqwX7jHGcmHn/7QCRsx0IBy/SL24TzfSV9SUSnbjK4fTrcrhjYDEZdH1lpvDtvr50GgkrTjy1wPVz8XIyCZ7LZolylkx+nR1MWyvum20QRFub2Qhz/+rS+OFiQZ8H01BPuklLUTSQhBksfpGBck3d2yNLiTqGEVWYTnZ9mkCnMQ3BzJXEF04KLHG7wYn2rk6wjPghVmFQH5GMsxM5v33CFgcNzp6lRJOX9CmjZosck6o9SA0WlazHH/CLWWKk1wrQ1ygDayW5m+N/o58UIxgW2LIUlp4tV1z/bRtO2yTd020yWchlKPVmf1A5OMfigJNMRsQGNZNadS7qA2M394OJw3/Hg+0EVF8gai/V8FRijmkxmhYyCIYMcjaGwx8JxfoMrRKcM76haBAhg0JQxsSVKzyXfONGzd5DXjcxSGZ2wuEdu0=
      on_success: never
      on_failure: always
  
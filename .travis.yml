---
  env:
    global:
      - AWS_ACCESS_KEY_ID=AKIAIYAXFUAHXOWP2MJA
      # AWS_SECRET_ACCESS_KEY
      secure: "MUUWqlarz9PcQwEII600c9mirCdQfvaxk+B840q7TlWLUbet9Xsb2YadJQQNiJK4Vgo7BQ/D2Y4o5Eywq1nIQ76buxLfNNb5uCsCIINBJ3fVRl3a8CXG+gOCYeUNW3wGUFEyz3fI5R6brVqUoVD938786kbLkSiaInDPwQQ7dXi0HhGxPbswHXJni4sorRZhvTx3cW7As9WNGc6oN3Tn5kM3CrSoatl7lohJi7dSAoetSLdnJCycvBzydz91VjhmRK0OCAhq8El144lOlA3YpKgV/Q1Rp9pb9/CshBhPxUz3A7iYDb3YuB7EYE28KgPFogsJq2ZW/Ga04TKT/TYPjOLH3xzV+llqtHdEZTt7qyHZh5nK5wM7rkDnkwkOudwAz8IqgQutZcYDRP7jZio5EDesk128k6ZVlGuGaPBrDUMm2yTxS/jllEwAi6nS5LCk3HB4f5HKvlD5FBh5Tet83o7y3BdnOFQ5ooi/NS+wYT2UXr2qT0J0cghsi1QIA/4E8a/krcK6MAeKYJOpquh6rNREy8b4hNmYWnGatVOV7j8I0RyV/O4lpgSgPhUjSebGOMsa0bG2xrnb9NXCJQT9CW/YBdZGkgHbcQUO8eiNVjcF6J4Rvhzp79piVG3KXXU9fmSStwqWWVU21PVchSmtrEiqXIe1f2rOJoMN1cyxZ9U="
  # ------------------------
  # Jobs configuration
  # ------------------------
  jobs:
    include:
      - stage: Tests
        name: Dead link check
        if:
          type = pull_request OR type = push AND branch =~ /^master|[0-9]+-(dev|stable)$/
          OR type = cron
        language: node_js
        node_js: 12
        before_script:
          - npm ci
          - npm run doc-prepare
          - $(npm bin)/kuzdoc iterate-repos:install --repos_path doc/framework/.repos/
          - $(npm bin)/kuzdoc framework:link -d /sdk/dart/2/ -v 2
  
        script:
          - gem install typhoeus
          - cd doc/framework/ && HYDRA_MAX_CONCURRENCY=20 ruby .ci/dead-links.rb -p src/sdk/java/3/
  
  
      - stage: Tests
        name: Documentation Snippets
        if: type = pull_request OR type = push AND branch =~ /^master|[0-9]+-dev$/ OR type = cron
        language: node_js
        node_js: 12
        script: docker-compose -f .ci/doc/docker-compose.yml run doc-tests index
  
  
      - stage: Tests
        name: Unit tests Dart SDK
        language: dart
        sudo: false
        dart:
          - stable
        dart_task:
        - test: --platform vm
        - dartanalyzer: --fatal-warnings lib
        services:
          - docker
        before_script:
          - if [ $TRAVIS_DART_TEST == true ]; then ./docker_launch.sh; fi
        cache:
          directories:
            - $HOME/.pub-cache
        after_success:
          - if [ "$TRAVIS_DART_VERSION" == "stable" ] && [ $TRAVIS_DART_TEST == true ]; then ./coverage.sh; fi
          - if [ "$TRAVIS_DART_VERSION" == "stable" ] && [ $TRAVIS_DART_TEST == true ] && [ $TRAVIS_BRANCH == 'master' ]; then dartdoc; fi      
  
  
      - stage: Deployments
        name: Deploy documentation to next-docs.kuzzle.io
        if: type = push AND branch =~ /^[0-9]+-dev$/
        language: node_js
        node_js: 12
        env:
          - BRANCH=dev
          - NODE_ENV=production
          - S3_BUCKET=docs-next.kuzzle.io
          - CLOUDFRONT_DISTRIBUTION_ID=E2ZCCEK9GRB49U
          - AWS_DEFAULT_REGION=us-west-2
  
        addons:
          apt:
            update: true
            packages:
              - python
              - python-pip
  
        install:
          - pip install awscli --upgrade --user
          - npm ci
  
        script:
          - npm run doc-prepare
          - npm run doc-build
  
        deploy:
          provider: script
          script:
            - npm run doc-upload
          skip_cleanup: true
          on:
            all_branches: true
  
        after_deploy:
          - npm run doc-cloudfront
  
  
      - stage: Deployments
        name: Deploy documentation to docs.kuzzle.io
        if: type = push AND branch =~ /^master|[0-9]+-stable$/
        language: node_js
        node_js: 12
        env:
          - NODE_ENV=production
          - S3_BUCKET=docs.kuzzle.io
          - CLOUDFRONT_DISTRIBUTION_ID=E3D6RP0POLCJMM
          - AWS_DEFAULT_REGION=us-west-2
        addons:
          apt:
            packages:
              - python
              - python-pip
        install:
          - pip install awscli --upgrade --user
          - npm ci
        script:
          - npm run doc-prepare
          - npm run doc-build
        deploy:
          provider: script
          script:
            - npm run doc-upload
          skip_cleanup: true
          on:
            all_branches: true
        after_deploy:
          - npm run doc-cloudfront
  
  stages:
    - name: Tests
      if: type =~ /(push)/ AND branch =~ /^master|[0-9]+-(dev|stable)$/
    - name: Builds
      if: type =~ /(push)/ AND branch =~ /^master|[0-9]+-(dev|stable)$/
    - name: Deployments
      if: type =~ /(push)/ AND branch =~ /^master|[0-9]+-(dev|stable)$/
  
  notifications:
    slack:
      rooms:
        - secure: ACjz4TJEYBEzmwVOYrCNnr4+jC0FaX+qh150QacYGIgaQYL+U3xLEQmWNlZ3oxaPPMDAk42m+diHolqNwh6qsOWaPSWRlGfLKhHLSzRI98bhF7HQ+3eLMYmx7y7SKwRzyRjus0jgxp0Kc2mq0nhKqv+7rarQtIgWlC1PLrzZ35CUbUlqYSoeYAlXoyDB1eZgYsvjt+eC5yCvGePsfKbupWC2/hIVl+qZ+9AhVmOfiMv7daFW29Vu300aoY+0IqwX7jHGcmHn/7QCRsx0IBy/SL24TzfSV9SUSnbjK4fTrcrhjYDEZdH1lpvDtvr50GgkrTjy1wPVz8XIyCZ7LZolylkx+nR1MWyvum20QRFub2Qhz/+rS+OFiQZ8H01BPuklLUTSQhBksfpGBck3d2yNLiTqGEVWYTnZ9mkCnMQ3BzJXEF04KLHG7wYn2rk6wjPghVmFQH5GMsxM5v33CFgcNzp6lRJOX9CmjZosck6o9SA0WlazHH/CLWWKk1wrQ1ygDayW5m+N/o58UIxgW2LIUlp4tV1z/bRtO2yTd020yWchlKPVmf1A5OMfigJNMRsQGNZNadS7qA2M394OJw3/Hg+0EVF8gai/V8FRijmkxmhYyCIYMcjaGwx8JxfoMrRKcM76haBAhg0JQxsSVKzyXfONGzd5DXjcxSGZ2wuEdu0=
      on_success: never
      on_failure: always
  